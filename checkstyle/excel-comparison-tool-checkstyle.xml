<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
  "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="com.puppycrawl.tools.checkstyle.Checker">
  <!-- Root Checks -->
  <module name="com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck">
    <property name="headerFile" value="${checkstyle.header.file}"/>
    <property name="fileExtensions" value="java"/>
  </module>
  <module name="SuppressionFilter">
    <property name="file" value="checkstyle/event-processor-checkstyle-suppressions.xml"/>
  </module>
  <module name="com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck">
    <property name="lineSeparator" value="lf"/>
    <property name="severity" value="warning"/>
  </module>

  <!-- TreeWalker Checks -->
  <module name="com.puppycrawl.tools.checkstyle.TreeWalker">
    <module name="com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck">
      <property name="allowSamelineSingleParameterlessAnnotation"
        value="false"/>
    </module>

    <!-- Block Checks -->
    <module name="com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck">
      <property name="option" value="text"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck">
      <property name="option" value="eol"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck">
      <property name="option" value="same"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck"/>

    <!-- Class Design -->
    <module name="com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.design.OneTopLevelClassCheck"/>

    <!-- Coding -->
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck">
      <property name="max" value="60"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck">
      <!--Once again just something to point out not in coding standard. -->
      <property name="severity" value="warning"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck"/>
    <module name="BooleanExpressionComplexity">
      <property name="max" value="2"/>
      <!--May want to play with the max and bring it up to 3 if we see fits-->
      <property name="severity" value="warning"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheck">
      <property name="max" value="3"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck">
      <property name="max" value="3"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck">
      <property name="max" value="3"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck">
      <property name="checkMethods" value="false"/>
      <property name="validateOnlyOverlapping" value="true"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"/>

    <!-- Imports -->
    <module name="com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck">
      <property name="processJavadoc" value="true"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.UpperEllCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck"/>

    <!-- Modifiers -->
    <module name="com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck"/>

    <!-- Regexp -->
    <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
      <property name="format" value="\s{4}\S*$"/>
      <property name="message"
        value="Line dose not match the requirement that indentation should be performed with 4 spaces."/>
      <property name="severity" value="warning"/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
      <property name="maximum" value="0"/>
      <property name="format" value="org\.mockito\.Mockito\.(when|doThrow|doAnswer)"/>
      <property name="message"
        value="Please use BDDMockito imports."/>
      <property name="ignoreComments" value="true"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
      <property name="maximum" value="0"/>
      <property name="format" value="org\.junit\.Assert\.assert"/>
      <property name="message"
        value="Please use AssertJ imports."/>
      <property name="ignoreComments" value="true"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck">
      <property name="format" value="^[^ \t]+[ \t]+$"/>
      <property name="illegalPattern" value="true"/>
      <property name="message" value="Trailing whitespace"/>
    </module>

    <!-- Whitespace -->
    <module name="com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck">
      <property name="severity" value="warning"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck">
      <property name="tokens"
        value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS, ARRAY_DECLARATOR"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck">
      <property name="severity" value="warning"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck">
      <property name="allowEmptyTypes" value="true"/>
    </module>
    <!--Check naming rules to make sure they follow Java case rules-->
    <module name="com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.naming.MethodTypeParameterNameCheck">
      <property name="format" value="^[A-Z]*$"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheck"/>
    <module name="com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck">
      <property name="format"
        value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
    </module>
    <module name="com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck"/>
    <module name="AnonInnerLength">
      <property name="max" value="120"/>
      <property name="severity" value="warning"/>
    </module>
    <!-- Allow checkstyle to detect the @SuppressWarning annotations -->
    <!-- http://checkstyle.sourceforge.net/config_annotation.html#SuppressWarningsHolder -->
    <module name="com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder"/>
  </module>
  <!-- Filter out any violation that has been covered with an @SuppressWarnings annotation -->
  <!-- http://checkstyle.sourceforge.net/config_filters.html#SuppressWarningsFilter -->
  <module name="com.puppycrawl.tools.checkstyle.filters.SuppressWarningsFilter"/>
</module>